{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _AntDesign = _interopRequireDefault(require(\"react-native-vector-icons/AntDesign\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _netinfo = _interopRequireDefault(require(\"@react-native-community/netinfo\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _jsxFileName = \"D:\\\\Lavazza_Tech\\\\screens\\\\configuration.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ConfigurationScreen = function (_React$Component) {\n  (0, _inherits2.default)(ConfigurationScreen, _React$Component);\n\n  var _super = _createSuper(ConfigurationScreen);\n\n  function ConfigurationScreen(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ConfigurationScreen);\n    _this = _super.call(this, props);\n\n    _this.fetchProductData = function _callee3() {\n      return _regenerator.default.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regenerator.default.awrap(_this.setState({\n                isProductDataFetching: true\n              }));\n\n            case 2:\n              fetch('http://192.168.5.1:9876/techapp/productInfo', {\n                headers: {\n                  tokenId: 'secret'\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function _callee(resultData) {\n                return _regenerator.default.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(resultData['status'] === 'Success')) {\n                          _context.next = 3;\n                          break;\n                        }\n\n                        _context.next = 3;\n                        return _regenerator.default.awrap(_this.setState({\n                          deviceProductInfo: resultData['data']\n                        }));\n\n                      case 3:\n                        _context.next = 5;\n                        return _regenerator.default.awrap(_this.setState({\n                          isProductDataFetching: false\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function _callee2(e) {\n                return _regenerator.default.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _regenerator.default.awrap(_this.setState({\n                          isProductDataFetching: false\n                        }));\n\n                      case 2:\n                        alert(e);\n\n                      case 3:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.networkConnectionFailed = function () {\n      _reactNative.Alert.alert('Network Failed', 'Check Your Wifi Connection & Try Again', [{\n        text: 'Close'\n      }], {\n        cancelable: true\n      });\n    };\n\n    _this.editProducts = function _callee7() {\n      var isInvalidConfiguration, configuredProductValues, uniqueProducts, configuredProductData;\n      return _regenerator.default.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              isInvalidConfiguration = false;\n              Object.keys(_this.state.deviceProductInfo).map(function (productKey) {\n                if (_this.state[productKey] === '' || _this.state[productKey] === undefined) {\n                  isInvalidConfiguration = true;\n                }\n              });\n\n              if (!isInvalidConfiguration) {\n                configuredProductValues = [];\n                Object.keys(_this.state.deviceProductInfo).map(function (productKey) {\n                  configuredProductValues.push(_this.state[productKey]);\n                });\n                uniqueProducts = (0, _toConsumableArray2.default)(new Set(configuredProductValues));\n\n                if (uniqueProducts.length !== 8) {\n                  _reactNative.Alert.alert('Duplicate Configuration', 'Please remove duplicate configuration', [{\n                    text: 'Close',\n                    onPress: function onPress() {\n                      return console.log('Ask me later pressed');\n                    }\n                  }], {\n                    cancelable: true\n                  });\n                } else {\n                  configuredProductData = {};\n                  Object.keys(_this.state.deviceProductInfo).map(function (productKey) {\n                    configuredProductData[productKey] = _this.state[productKey];\n                  });\n                  fetch('http://192.168.5.1:9876/techapp/configureProductInfo', {\n                    method: 'POST',\n                    headers: {\n                      tokenId: 'secret',\n                      \"Content-Type\": 'application/json'\n                    },\n                    body: JSON.stringify({\n                      data: configuredProductData\n                    })\n                  }).then(function (response) {\n                    return response.json();\n                  }).then(function _callee6(resultData) {\n                    return _regenerator.default.async(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            if (!(resultData['status'] === 'Success')) {\n                              _context6.next = 7;\n                              break;\n                            }\n\n                            _context6.next = 3;\n                            return _regenerator.default.awrap(_this.setState({\n                              deviceProductInfo: configuredProductData,\n                              isEditProducts: false\n                            }));\n\n                          case 3:\n                            Object.keys(_this.state.deviceProductInfo).map(function _callee4(productKey) {\n                              return _regenerator.default.async(function _callee4$(_context4) {\n                                while (1) {\n                                  switch (_context4.prev = _context4.next) {\n                                    case 0:\n                                      _context4.next = 2;\n                                      return _regenerator.default.awrap(_this.setState((0, _defineProperty2.default)({}, productKey, '')));\n\n                                    case 2:\n                                    case \"end\":\n                                      return _context4.stop();\n                                  }\n                                }\n                              }, null, null, null, Promise);\n                            });\n\n                            _reactNative.ToastAndroid.showWithGravityAndOffset(\"Success:  \" + resultData['infoText'], _reactNative.ToastAndroid.LONG, _reactNative.ToastAndroid.CENTER, 25, 50);\n\n                            _context6.next = 9;\n                            break;\n\n                          case 7:\n                            Object.keys(_this.state.deviceProductInfo).map(function _callee5(productKey) {\n                              return _regenerator.default.async(function _callee5$(_context5) {\n                                while (1) {\n                                  switch (_context5.prev = _context5.next) {\n                                    case 0:\n                                      _context5.next = 2;\n                                      return _regenerator.default.awrap(_this.setState((0, _defineProperty2.default)({}, productKey, '')));\n\n                                    case 2:\n                                    case \"end\":\n                                      return _context5.stop();\n                                  }\n                                }\n                              }, null, null, null, Promise);\n                            });\n\n                            _reactNative.ToastAndroid.showWithGravityAndOffset(\"Failed:  \" + resultData['infoText'], _reactNative.ToastAndroid.LONG, _reactNative.ToastAndroid.CENTER, 25, 50);\n\n                          case 9:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  }).catch(function (e) {\n                    alert(e);\n                  });\n                }\n              } else {\n                _reactNative.Alert.alert('Invalid Configuration', 'Please Configure All the Parameters', [{\n                  text: 'Close',\n                  onPress: function onPress() {\n                    return console.log('Ask me later pressed');\n                  }\n                }], {\n                  cancelable: true\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      allProducts: ['Cappuccino', 'Espresso', 'South Indian Coffee Light', 'South Indian Coffee Strong', 'Tea Water', 'Lemon Tea', 'Tea Milk', 'Milk'],\n      isEditProducts: false,\n      selectedIndex: '',\n      deviceProductInfo: '',\n      connectionType: '',\n      isConnected: false,\n      isProductDataFetching: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(ConfigurationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var metworkConnectionInfo;\n      return _regenerator.default.async(function componentDidMount$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              metworkConnectionInfo = _netinfo.default.addEventListener(function _callee8(state) {\n                return _regenerator.default.async(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _context8.next = 2;\n                        return _regenerator.default.awrap(_this2.setState({\n                          connectionType: state.type,\n                          isConnected: state.isConnected\n                        }));\n\n                      case 2:\n                        _context8.next = 4;\n                        return _regenerator.default.awrap(_this2.fetchProductData());\n\n                      case 4:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, this.state.connectionType === 'wifi' && this.state.isConnected === true ? this.state.isProductDataFetching === true ? _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_nativeBase.Spinner, {\n        color: \"#182C61\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }), _react.default.createElement(_nativeBase.Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }, \"Loading... Please wait!\")) : this.state.deviceProductInfo !== '' ? _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_nativeBase.Card, {\n        style: {\n          width: '90%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_nativeBase.CardItem, {\n        header: true,\n        style: {\n          justifyContent: 'center',\n          backgroundColor: '#182C61'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_nativeBase.Text, {\n        style: {\n          fontSize: 20,\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }\n      }, \"Product Configuration\")), _react.default.createElement(_nativeBase.CardItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_nativeBase.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, Object.keys(this.state.deviceProductInfo).map(function (productKey, index) {\n        return _react.default.createElement(_reactNative.View, {\n          style: {\n            flexDirection: 'row',\n            padding: 2,\n            width: '95%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }\n        }, _this3.state.isEditProducts === true ? _react.default.createElement(_nativeBase.Form, {\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 53\n          }\n        }, _react.default.createElement(_nativeBase.Item, {\n          picker: true,\n          style: {\n            width: '95%',\n            marginLeft: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 53\n          }\n        }, _react.default.createElement(_nativeBase.Label, {\n          style: {\n            color: 'blue',\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 57\n          }\n        }, productKey), _react.default.createElement(_nativeBase.Picker, {\n          mode: \"dropdown\",\n          iosIcon: _react.default.createElement(_AntDesign.default, {\n            name: \"arrow-down\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 68\n            }\n          }),\n          placeholder: \"Select Product\",\n          placeholderStyle: {\n            color: '#bfc6ea'\n          },\n          placeholderIconColor: \"#007aff\",\n          selectedValue: _this3.state[productKey],\n          onValueChange: function _callee9(value) {\n            var selectedProducts, uniqueProducts;\n            return _regenerator.default.async(function _callee9$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return _regenerator.default.awrap(_this3.setState((0, _defineProperty2.default)({}, productKey, value)));\n\n                  case 2:\n                    selectedProducts = [];\n                    Object.keys(_this3.state.deviceProductInfo).map(function (productKey, index) {\n                      console.log(_this3.state[productKey]);\n\n                      if (_this3.state[productKey] !== undefined && _this3.state[productKey] !== '') {\n                        selectedProducts.push(_this3.state[productKey]);\n                      }\n                    });\n                    uniqueProducts = (0, _toConsumableArray2.default)(new Set(selectedProducts));\n\n                    if (!(uniqueProducts.length < selectedProducts.length)) {\n                      _context10.next = 9;\n                      break;\n                    }\n\n                    _context10.next = 8;\n                    return _regenerator.default.awrap(_this3.setState((0, _defineProperty2.default)({}, productKey, '')));\n\n                  case 8:\n                    _reactNative.Alert.alert('Invalid Configuration', 'Please Configure All the Parameters', [{\n                      text: 'Close'\n                    }], {\n                      cancelable: true\n                    });\n\n                  case 9:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 57\n          }\n        }, _react.default.createElement(_nativeBase.Picker.Item, {\n          label: \"---Select Product---\",\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 53\n          }\n        }), _this3.state.allProducts.map(function (product, index) {\n          return _react.default.createElement(_nativeBase.Picker.Item, {\n            label: product,\n            value: product,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 64\n            }\n          });\n        })))) : [_react.default.createElement(_nativeBase.Text, {\n          style: {\n            fontSize: 20,\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }\n        }, productKey, \":\"), _react.default.createElement(_nativeBase.Text, {\n          style: {\n            fontSize: 19,\n            flexWrap: 'wrap',\n            paddingLeft: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }\n        }, _this3.state.deviceProductInfo[productKey])]);\n      }), this.state.isEditProducts === true ? null : _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_nativeBase.Button, {\n        rounded: true,\n        style: {\n          marginBottom: 30,\n          marginTop: 20,\n          backgroundColor: '#182C61',\n          width: '65%',\n          justifyContent: 'space-between'\n        },\n        onPress: function _callee10() {\n          return _regenerator.default.async(function _callee10$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return _regenerator.default.awrap(_this3.setState({\n                    isEditProducts: true\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 1\n        }\n      }, _react.default.createElement(_nativeBase.Text, {\n        style: {\n          marginLeft: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }\n      }, \"Edit Products\"))), this.state.isEditProducts == true ? _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_nativeBase.Button, {\n        rounded: true,\n        style: {\n          marginBottom: 30,\n          marginTop: 20,\n          backgroundColor: '#f1f2f6'\n        },\n        onPress: function _callee11() {\n          return _regenerator.default.async(function _callee11$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return _regenerator.default.awrap(_this3.setState({\n                    isEditProducts: false\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 1\n        }\n      }, _react.default.createElement(_nativeBase.Text, {\n        style: {\n          marginLeft: 'auto',\n          color: '#000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, \"Cancel\")), _react.default.createElement(_nativeBase.Button, {\n        rounded: true,\n        style: {\n          marginBottom: 30,\n          marginTop: 20,\n          backgroundColor: '#182C61'\n        },\n        onPress: function onPress() {\n          _this3.editProducts();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 1\n        }\n      }, _react.default.createElement(_nativeBase.Text, {\n        style: {\n          marginLeft: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }\n      }, \"Submit\"))) : null))))) : _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: {\n          width: 80,\n          height: 80,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: 100\n        },\n        source: require('../warning.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_nativeBase.Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 9\n        }\n      }, \"Something Went Wrong...! Please Try Again\")) : _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 3\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: {\n          width: 80,\n          height: 80,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: 100\n        },\n        source: require('../warning.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_nativeBase.Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }\n      }, \"Check Your Wifi Connection\"))));\n    }\n  }]);\n  return ConfigurationScreen;\n}(_react.default.Component);\n\nvar _default = ConfigurationScreen;\nexports.default = _default;","map":{"version":3,"sources":["D:/Lavazza_Tech/screens/configuration.js"],"names":["ConfigurationScreen","props","fetchProductData","setState","isProductDataFetching","fetch","headers","tokenId","then","response","json","resultData","deviceProductInfo","catch","e","alert","networkConnectionFailed","Alert","text","cancelable","editProducts","isInvalidConfiguration","Object","keys","state","map","productKey","undefined","configuredProductValues","push","uniqueProducts","Set","length","onPress","console","log","configuredProductData","method","body","JSON","stringify","data","isEditProducts","ToastAndroid","showWithGravityAndOffset","LONG","CENTER","allProducts","selectedIndex","connectionType","isConnected","metworkConnectionInfo","NetInfo","addEventListener","type","textAlign","flex","width","marginLeft","marginRight","justifyContent","backgroundColor","fontSize","color","index","flexDirection","padding","fontWeight","value","selectedProducts","product","flexWrap","paddingLeft","marginBottom","marginTop","height","require","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {View, SafeAreaView, ScrollView, TouchableOpacity,ToastAndroid, Alert, Image} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\nimport {\r\n  Form,\r\n  Item,\r\n  Label,\r\n  Card,\r\n  CardItem,\r\n  Text,\r\n  Body,\r\n  Button,\r\n  Picker,\r\n  Spinner\r\n\r\n} from 'native-base';\r\n\r\nimport NetInfo from \"@react-native-community/netinfo\";\r\n\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nclass ConfigurationScreen extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allProducts:[\r\n                'Cappuccino', \r\n                'Espresso', \r\n                'South Indian Coffee Light',\r\n                'South Indian Coffee Strong',\r\n                'Tea Water',\r\n                'Lemon Tea',\r\n                'Tea Milk',\r\n                'Milk'],\r\n\r\n\r\n            isEditProducts:false,\r\n\r\n            selectedIndex:'',\r\n\r\n            deviceProductInfo:'',\r\n            connectionType:'',\r\n            isConnected:false,\r\n\r\n            isProductDataFetching:false\r\n        };\r\n      }\r\n\r\n      async componentDidMount(){\r\n        const metworkConnectionInfo = NetInfo.addEventListener(async state => {\r\n    \r\n          await this.setState({connectionType:state.type, isConnected:state.isConnected});\r\n          await this.fetchProductData()\r\n        });\r\n      }\r\n\r\n      // Fetch All products Information\r\n      fetchProductData = async() =>{   \r\n        await this.setState({isProductDataFetching:true});  \r\n        fetch('http://192.168.5.1:9876/techapp/productInfo',{\r\n          headers:{\r\n            tokenId:'secret'\r\n          }\r\n  \r\n        })\r\n        .then((response)=> response.json())\r\n        .then(async(resultData)=>{\r\n          if(resultData['status']==='Success'){\r\n            await this.setState({deviceProductInfo:resultData['data']});\r\n          }\r\n          await this.setState({isProductDataFetching:false});\r\n          \r\n        })\r\n        .catch(async(e)=>{\r\n          await this.setState({isProductDataFetching:false});\r\n          alert(e);\r\n        })\r\n\r\n      }\r\n\r\n\r\n      // Wifi connection failed\r\n      networkConnectionFailed = ()=>{\r\n        Alert.alert(\r\n          'Network Failed',\r\n          'Check Your Wifi Connection & Try Again',\r\n          [\r\n            {\r\n              text: 'Close',\r\n            }\r\n          ],\r\n          { cancelable: true }\r\n        );\r\n      }\r\n\r\n\r\n      editProducts = async() =>{\r\n        var isInvalidConfiguration=false;\r\n\r\n        Object.keys(this.state.deviceProductInfo).map((productKey)=>{\r\n          if(this.state[productKey]==='' || this.state[productKey]=== undefined){\r\n            isInvalidConfiguration=true;\r\n          }\r\n\r\n        })\r\n\r\n        if(!isInvalidConfiguration){\r\n          let configuredProductValues = []\r\n            Object.keys(this.state.deviceProductInfo).map((productKey)=>{\r\n              configuredProductValues.push(this.state[productKey]);\r\n            })\r\n\r\n            var uniqueProducts = [...new Set(configuredProductValues)]\r\n\r\n            if(uniqueProducts.length !==8){\r\n\r\n              Alert.alert(\r\n                'Duplicate Configuration',\r\n                'Please remove duplicate configuration',\r\n                [\r\n                  {\r\n                    text: 'Close',\r\n                    onPress: () => console.log('Ask me later pressed')\r\n                  }\r\n                ],\r\n                { cancelable: true }\r\n              );\r\n\r\n            }\r\n            else{\r\n\r\n              var configuredProductData = {};\r\n              Object.keys(this.state.deviceProductInfo).map((productKey)=>{\r\n                configuredProductData[productKey] = this.state[productKey];\r\n              });\r\n\r\n              // POST New Product Configure Data\r\n              fetch('http://192.168.5.1:9876/techapp/configureProductInfo',{\r\n                method:'POST',\r\n                headers:{\r\n                  tokenId:'secret',\r\n                  \"Content-Type\":'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                  data:configuredProductData\r\n                })\r\n              })\r\n              .then(response => response.json())\r\n              .then(async(resultData)=>{\r\n                if(resultData['status']==='Success'){\r\n\r\n                  await this.setState({deviceProductInfo:configuredProductData, isEditProducts:false});\r\n\r\n                  Object.keys(this.state.deviceProductInfo).map(async(productKey)=>{\r\n                    await this.setState({[productKey]:''});\r\n                  })\r\n\r\n                  ToastAndroid.showWithGravityAndOffset(\r\n                    \"Success:  \"+resultData['infoText'],\r\n                    ToastAndroid.LONG,\r\n                    ToastAndroid.CENTER,\r\n                    25,\r\n                    50\r\n                  );\r\n\r\n                }\r\n                else{\r\n\r\n                  Object.keys(this.state.deviceProductInfo).map(async(productKey)=>{\r\n                    await this.setState({[productKey]:''});\r\n                  });\r\n\r\n                  ToastAndroid.showWithGravityAndOffset(\r\n                    \"Failed:  \"+resultData['infoText'],\r\n                    ToastAndroid.LONG,\r\n                    ToastAndroid.CENTER,\r\n                    25,\r\n                    50\r\n                  );\r\n\r\n                }\r\n              })\r\n              .catch((e)=>{\r\n                alert(e);\r\n              })\r\n            }\r\n        }\r\n        else{\r\n          Alert.alert(\r\n            'Invalid Configuration',\r\n            'Please Configure All the Parameters',\r\n            [\r\n              {\r\n                text: 'Close',\r\n                onPress: () => console.log('Ask me later pressed')\r\n              }\r\n            ],\r\n            { cancelable: true }\r\n          );\r\n        }\r\n\r\n      }\r\n\r\n  render() {\r\n    return (\r\n        <SafeAreaView>\r\n        <ScrollView>\r\n          {this.state.connectionType==='wifi' && this.state.isConnected===true ? (\r\n\r\n            this.state.isProductDataFetching===true?(\r\n              <View>\r\n              <Spinner color='#182C61'>\r\n                \r\n              </Spinner>\r\n              <Text style={{textAlign:'center'}}>Loading... Please wait!</Text>\r\n              </View>\r\n            ):(\r\n\r\n            this.state.deviceProductInfo!==''?(\r\n            <View style={{flex:1,}}>\r\n        <View style={{}}>\r\n          <Card\r\n            style={{\r\n              width: '90%',\r\n              marginLeft: 'auto',\r\n              marginRight: 'auto',\r\n            }}>\r\n            <CardItem header style={{justifyContent: 'center' ,backgroundColor:'#182C61'}}>\r\n              <Text style={{fontSize: 20, color:'#fff'}}>Product Configuration</Text>\r\n            </CardItem>\r\n            <CardItem>\r\n              <Body>\r\n                  {Object.keys(this.state.deviceProductInfo).map((productKey, index)=>{\r\n                      return(\r\n                        <View style={{flexDirection:'row', padding:2, width:'95%'}}>\r\n                            {this.state.isEditProducts===true?(\r\n                                                    <Form style={{width: '100%'}}>\r\n                                                    <Item\r\n                                                        picker\r\n                                                        style={{width: '95%', marginLeft: 15}}>\r\n                                                        <Label style={{color: 'blue', fontWeight: 'bold'}}>\r\n                                                          {productKey}\r\n                                                        </Label>\r\n                                                        <Picker\r\n                                                          mode=\"dropdown\"\r\n                                                          iosIcon={<Icon name=\"arrow-down\" />}\r\n                                    \r\n                                                    placeholder=\"Select Product\"\r\n                                                          placeholderStyle={{color: '#bfc6ea'}}\r\n                                                          placeholderIconColor=\"#007aff\"\r\n                                                          selectedValue={this.state[productKey]}\r\n                                                          onValueChange={async value => {\r\n                                                            await this.setState({[productKey]: value});\r\n\r\n                                                            let selectedProducts = [];\r\n\r\n                                                            Object.keys(this.state.deviceProductInfo).map((productKey,index)=>{\r\n                                                                console.log(this.state[productKey]);\r\n                                                                if(this.state[productKey]!==undefined && this.state[productKey]!=='' ){\r\n                                                                    selectedProducts.push(this.state[productKey]);\r\n                                                                }\r\n                                                            })\r\n\r\n                                                            let uniqueProducts = [...new Set(selectedProducts)]\r\n\r\n                                                            if(uniqueProducts.length<selectedProducts.length){\r\n                                                              await this.setState({[productKey]:''})\r\n                                                              Alert.alert(\r\n                                                                'Invalid Configuration',\r\n                                                                'Please Configure All the Parameters',\r\n                                                                [\r\n                                                                  {\r\n                                                                    text: 'Close',\r\n\r\n                                                                  }\r\n                                                                ],\r\n                                                                { cancelable: true }\r\n                                                              );\r\n                                                            }\r\n\r\n                                                          }}\r\n                                    \r\n                                                  >\r\n\r\n                                                    \r\n                                                    <Picker.Item label=\"---Select Product---\" value=\"\" />\r\n\r\n                                                    {this.state.allProducts.map((product, index)=>{\r\n                                                        return(<Picker.Item label={product} value={product} />)\r\n                                                    })}\r\n\r\n                                                        </Picker>\r\n                                                      </Item>\r\n                                                      </Form>\r\n                            ):([\r\n                            <Text style={{fontSize:20,fontWeight:'bold'}}>{productKey}:</Text>,\r\n                            <Text style={{ fontSize:19,flexWrap:'wrap', paddingLeft:10}}>{this.state.deviceProductInfo[productKey]}</Text>\r\n                            ])}\r\n                        \r\n                            </View>)\r\n                  })}\r\n\r\n\r\n                  {this.state.isEditProducts===true ?(null):(\r\n                  <View style={{flexDirection:'row', width:'100%', justifyContent:'space-around'}}>\r\n\r\n<Button\r\n                    rounded\r\n                    style={{\r\n                      \r\n                      marginBottom: 30,\r\n                      marginTop:20,\r\n                      backgroundColor:'#182C61',\r\n                      width:'65%',\r\n                      justifyContent:'space-between'\r\n\r\n                    }}\r\n                    \r\n                    onPress = {async()=>{await this.setState({isEditProducts:true})}}\r\n                    \r\n                    >\r\n                    \r\n                    <Text style={{marginLeft:3}}>Edit Products</Text>\r\n                  </Button>\r\n                  </View>\r\n                  )}\r\n\r\n                    {this.state.isEditProducts==true?(\r\n                  <View style={{flexDirection:'row', width:'100%', justifyContent:'space-around'}}>\r\n<Button\r\n                    rounded\r\n                    style={{\r\n                      \r\n                      \r\n                      marginBottom: 30,\r\n                      marginTop:20,\r\n                      backgroundColor:'#f1f2f6'\r\n\r\n                    }}\r\n                    \r\n                    onPress = {async()=>{await this.setState({isEditProducts:false})}}\r\n                    \r\n                    >\r\n                    <Text style={{marginLeft: 'auto', color:'#000'}}>Cancel</Text>\r\n                  </Button>\r\n<Button\r\n                    rounded\r\n                    style={{\r\n                      \r\n                      marginBottom: 30,\r\n                      marginTop:20,\r\n                      backgroundColor:'#182C61'\r\n\r\n                    }}\r\n\r\n                    onPress={()=>{this.editProducts()}}\r\n                    >\r\n                    <Text style={{marginLeft: 'auto'}}>Submit</Text>\r\n                  </Button>\r\n                  </View>\r\n                  ):(null)}\r\n\r\n\r\n              </Body>\r\n            </CardItem>\r\n          </Card>\r\n        </View>\r\n      </View>\r\n      ):(\r\n\r\n        <View>\r\n        <Image\r\n        style={{width:80, height:80, marginLeft:'auto', marginRight:'auto', marginTop:100}}\r\n        source={require('../warning.png')}\r\n        />\r\n\r\n        <Text style={{textAlign:'center'}}>Something Went Wrong...! Please Try Again</Text>\r\n        </View>\r\n      )\r\n            )\r\n\r\n):(\r\n  <View>\r\n                    <Image\r\n                    style={{width:80, height:80, marginLeft:'auto', marginRight:'auto', marginTop:100}}\r\n                    source={require('../warning.png')}\r\n                    />\r\n\r\n                    <Text style={{textAlign:'center'}}>Check Your Wifi Connection</Text>\r\n                    </View>\r\n)}\r\n      </ScrollView>\r\n      </SafeAreaView>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n  \r\n\r\nexport default ConfigurationScreen;\r\n"]},"metadata":{},"sourceType":"script"}