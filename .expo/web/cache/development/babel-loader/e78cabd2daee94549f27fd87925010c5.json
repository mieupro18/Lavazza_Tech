{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _AntDesign = _interopRequireDefault(require(\"react-native-vector-icons/AntDesign\"));\n\nvar _nativeBase = require(\"native-base\");\n\nvar _netinfo = _interopRequireDefault(require(\"@react-native-community/netinfo\"));\n\nvar _jsxFileName = \"D:\\\\Lavazza_Tech\\\\screens\\\\deviceInfo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DeviceInfo = function (_Component) {\n  (0, _inherits2.default)(DeviceInfo, _Component);\n\n  var _super = _createSuper(DeviceInfo);\n\n  function DeviceInfo(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DeviceInfo);\n    _this = _super.call(this, props);\n\n    _this.fetchDeviceData = function _callee3() {\n      return _regenerator.default.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(_this.state.connectionType === 'wifi' && _this.state.isConnected === true)) {\n                _context3.next = 4;\n                break;\n              }\n\n              _context3.next = 3;\n              return _regenerator.default.awrap(_this.setState({\n                isDeviceDataFetching: true\n              }));\n\n            case 3:\n              fetch('http://192.168.5.1:9876/techapp/deviceInfo', {\n                headers: {\n                  tokenId: 'secret'\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function _callee(resultData) {\n                return _regenerator.default.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(resultData['status'] === 'Success')) {\n                          _context.next = 3;\n                          break;\n                        }\n\n                        _context.next = 3;\n                        return _regenerator.default.awrap(_this.setState({\n                          deviceData: resultData['data']\n                        }));\n\n                      case 3:\n                        _context.next = 5;\n                        return _regenerator.default.awrap(_this.setState({\n                          isDeviceDataFetching: false\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function _callee2(e) {\n                return _regenerator.default.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _regenerator.default.awrap(_this.setState({\n                          isDeviceDataFetching: false\n                        }));\n\n                      case 2:\n                        alert(e);\n\n                      case 3:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.reboot = function _callee5() {\n      return _regenerator.default.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              fetch('http://192.168.5.1:9876/techapp/reboot', {\n                headers: {\n                  tokenId: 'secret'\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function _callee4(resultData) {\n                return _regenerator.default.async(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (resultData.status === 'Success') {\n                          _reactNative.ToastAndroid.showWithGravityAndOffset(\"Success:  \" + resultData['infoText'], _reactNative.ToastAndroid.LONG, _reactNative.ToastAndroid.CENTER, 25, 50);\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (e) {\n                alert(e);\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.networkConnectionFailed = function () {\n      _reactNative.Alert.alert('Network Failed', 'Check Your Wifi Connection & Try Again', [{\n        text: 'Close'\n      }], {\n        cancelable: true\n      });\n    };\n\n    _this.submitDeviceDetails = function _callee7() {\n      return _regenerator.default.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (_this.state.deviceName !== '' && _this.state.deviceId !== '' && _this.state.deviceType !== '') {\n                fetch(\"http://192.168.5.1:9876/techapp/configureDeviceInfo\", {\n                  method: 'POST',\n                  headers: {\n                    tokenId: 'secret',\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    data: {\n                      deviceName: _this.state.deviceName,\n                      deviceId: _this.state.deviceId,\n                      deviceType: _this.state.deviceType\n                    }\n                  })\n                }).then(function (response) {\n                  return response.json();\n                }).then(function _callee6(resultData) {\n                  var newConfigureData;\n                  return _regenerator.default.async(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if (!(resultData['status'] === 'Success')) {\n                            _context6.next = 9;\n                            break;\n                          }\n\n                          newConfigureData = {};\n                          newConfigureData['deviceName'] = _this.state.deviceName, newConfigureData['deviceId'] = _this.state.deviceId, newConfigureData['deviceType'] = _this.state.deviceType;\n                          newConfigureData['allDeviceTypes'] = _this.state.deviceData.allDeviceTypes;\n                          _context6.next = 6;\n                          return _regenerator.default.awrap(_this.setState({\n                            deviceData: newConfigureData,\n                            deviceName: '',\n                            deviceId: '',\n                            deviceType: '',\n                            isEditDeviceInfo: false\n                          }));\n\n                        case 6:\n                          _reactNative.ToastAndroid.showWithGravityAndOffset(\"Success:  \" + resultData['infoText'], _reactNative.ToastAndroid.LONG, _reactNative.ToastAndroid.CENTER, 25, 50);\n\n                          _context6.next = 12;\n                          break;\n\n                        case 9:\n                          _context6.next = 11;\n                          return _regenerator.default.awrap(_this.setState({\n                            deviceName: '',\n                            deviceId: '',\n                            deviceType: '',\n                            isEditDeviceInfo: false\n                          }));\n\n                        case 11:\n                          _reactNative.ToastAndroid.showWithGravityAndOffset(\"Failed:  \" + resultData['infoText'], _reactNative.ToastAndroid.LONG, _reactNative.ToastAndroid.CENTER, 25, 50);\n\n                        case 12:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n              } else {\n                _reactNative.Alert.alert('Field are missing', 'All Fields are required.', [{\n                  text: 'Close'\n                }], {\n                  cancelable: true\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      showToast: false,\n      isEditDeviceInfo: false,\n      deviceType: '',\n      deviceName: '',\n      deviceId: '',\n      connectionType: '',\n      isConnected: false,\n      deviceData: '',\n      isDeviceDataFetching: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(DeviceInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var networkConnectionInfo;\n      return _regenerator.default.async(function componentDidMount$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              networkConnectionInfo = _netinfo.default.addEventListener(function _callee8(state) {\n                return _regenerator.default.async(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _context8.next = 2;\n                        return _regenerator.default.awrap(_this2.setState({\n                          connectionType: state.type,\n                          isConnected: state.isConnected\n                        }));\n\n                      case 2:\n                        _context8.next = 4;\n                        return _regenerator.default.awrap(_this2.fetchDeviceData());\n\n                      case 4:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, this.state.connectionType !== 'wifi' || this.state.isConnected !== true ? _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: {\n          width: 80,\n          height: 80,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: 100\n        },\n        source: require('../warning.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, \"Check Your Wifi Connection\")) : this.state.isDeviceDataFetching === true ? _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_nativeBase.Spinner, {\n        color: \"#182c61\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }\n      }, \"Loading... Please Wait!\")) : this.state.deviceData !== '' ? _react.default.createElement(_reactNative.View, {\n        style: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_nativeBase.Card, {\n        style: {\n          width: '90%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_nativeBase.CardItem, {\n        header: true,\n        style: {\n          justifyContent: 'center',\n          backgroundColor: '#182C61'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 20,\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }, \"Device Info\")), this.state.isEditDeviceInfo === false ? _react.default.createElement(_nativeBase.CardItem, {\n        style: {\n          flexDirection: 'column',\n          alignItems: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '95%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 26\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }\n      }, \"Device Id\"), _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, this.state.deviceData.deviceId === null ? \"Not Set\" : this.state.deviceData.deviceId)), _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '95%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      }, \"Device Name\"), _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 19\n        }\n      }, this.state.deviceData.deviceName === null ? \"Not Set\" : this.state.deviceData.deviceName)), _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '95%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, \"Device Type\"), _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }\n      }, this.state.deviceData.deviceType === null ? \"Not Set\" : this.state.deviceData.deviceType)), _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_nativeBase.Button, {\n        onPress: function onPress() {\n          _this3.reboot();\n        },\n        style: {\n          justifyContent: 'center',\n          width: '40%',\n          marginTop: 15,\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          backgroundColor: 'red',\n          borderRadius: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: 5,\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 31\n        }\n      }, \"Reboot\")), _react.default.createElement(_nativeBase.Button, {\n        rounded: true,\n        style: {\n          justifyContent: 'center',\n          marginTop: 15,\n          width: '40%',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginBottom: 5,\n          backgroundColor: '#182c61'\n        },\n        onPress: function _callee9() {\n          return _regenerator.default.async(function _callee9$(_context10) {\n            while (1) {\n              switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return _regenerator.default.awrap(_this3.setState({\n                    isEditDeviceInfo: true\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: 5,\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }\n      }, \"Edit Details\")))) : _react.default.createElement(_nativeBase.CardItem, {\n        style: {\n          flexDirection: 'column',\n          alignItems: 'flex-start'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_nativeBase.Form, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_nativeBase.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_nativeBase.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }, \"Device Id\"), _react.default.createElement(_nativeBase.Input, {\n        name: \"deviceId\",\n        onChangeText: function _callee10(value) {\n          return _regenerator.default.async(function _callee10$(_context11) {\n            while (1) {\n              switch (_context11.prev = _context11.next) {\n                case 0:\n                  _context11.next = 2;\n                  return _regenerator.default.awrap(_this3.setState({\n                    deviceId: value\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context11.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_nativeBase.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_nativeBase.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }\n      }, \"Device Name\"), _react.default.createElement(_nativeBase.Input, {\n        name: \"deviceName\",\n        onChangeText: function _callee11(value) {\n          return _regenerator.default.async(function _callee11$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  _context12.next = 2;\n                  return _regenerator.default.awrap(_this3.setState({\n                    deviceName: value\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_nativeBase.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 1\n        }\n      }, _react.default.createElement(_nativeBase.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 1\n        }\n      }, \"Device Type\"), _react.default.createElement(_nativeBase.Picker, {\n        note: true,\n        mode: \"dropdown\",\n        style: {\n          width: 120\n        },\n        selectedValue: this.state.deviceType,\n        onValueChange: function _callee12(value) {\n          return _regenerator.default.async(function _callee12$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return _regenerator.default.awrap(_this3.setState({\n                    deviceType: value\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_nativeBase.Picker.Item, {\n        label: \"---Select Type---\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }\n      }), this.state.deviceData.allDeviceTypes.map(function (type) {\n        return _react.default.createElement(_nativeBase.Picker.Item, {\n          label: type,\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 24\n          }\n        });\n      }))), _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_nativeBase.Button, {\n        rounded: true,\n        style: {\n          justifyContent: 'space-around',\n          width: '40%',\n          marginBottom: 30,\n          marginTop: 20,\n          backgroundColor: '#f1f2f6'\n        },\n        onPress: function _callee13() {\n          return _regenerator.default.async(function _callee13$(_context14) {\n            while (1) {\n              switch (_context14.prev = _context14.next) {\n                case 0:\n                  _context14.next = 2;\n                  return _regenerator.default.awrap(_this3.setState({\n                    isEditDeviceInfo: false,\n                    deviceName: '',\n                    deviceId: '',\n                    deviceType: ''\n                  }));\n\n                case 2:\n                case \"end\":\n                  return _context14.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 1\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          marginLeft: 5,\n          color: '#000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }\n      }, \"Cancel\")), _react.default.createElement(_nativeBase.Button, {\n        rounded: true,\n        style: {\n          justifyContent: 'space-around',\n          width: '40%',\n          marginBottom: 30,\n          marginTop: 20,\n          backgroundColor: '#182C61'\n        },\n        onPress: function onPress() {\n          _this3.submitDeviceDetails();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 1\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }\n      }, \"Submit\"))))))) : _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: {\n          width: 80,\n          height: 80,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: 100\n        },\n        source: require('../warning.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }\n      }, \"Something Went Wrong...! Please Try Again\")));\n    }\n  }]);\n  return DeviceInfo;\n}(_react.Component);\n\nvar _default = DeviceInfo;\nexports.default = _default;","map":{"version":3,"sources":["D:/Lavazza_Tech/screens/deviceInfo.js"],"names":["DeviceInfo","props","fetchDeviceData","state","connectionType","isConnected","setState","isDeviceDataFetching","fetch","headers","tokenId","then","response","json","resultData","deviceData","catch","e","alert","reboot","status","ToastAndroid","showWithGravityAndOffset","LONG","CENTER","networkConnectionFailed","Alert","text","cancelable","submitDeviceDetails","deviceName","deviceId","deviceType","method","body","JSON","stringify","data","newConfigureData","allDeviceTypes","isEditDeviceInfo","showToast","networkConnectionInfo","NetInfo","addEventListener","type","width","height","marginLeft","marginRight","marginTop","require","textAlign","justifyContent","backgroundColor","fontSize","color","flexDirection","alignItems","fontWeight","borderRadius","marginBottom","value","map","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { View, Text, Alert, Image, ToastAndroid } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\n\r\nimport {\r\n\r\n    Card,\r\n    CardItem,\r\n    Button,\r\n    Form,\r\n    Label,\r\n    Input,\r\n    Item, \r\n    Picker,\r\n    Spinner\r\n  } from 'native-base';\r\n  import NetInfo from \"@react-native-community/netinfo\";\r\n\r\n\r\n\r\nclass DeviceInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          showToast:false,\r\n          isEditDeviceInfo:false,\r\n          deviceType:'',\r\n          deviceName:'',\r\n          deviceId:'',\r\n          connectionType:'',\r\n          isConnected:false,\r\n          deviceData:'',\r\n          isDeviceDataFetching:false\r\n         }\r\n    }\r\n\r\n    // Check Network connection info\r\n    async componentDidMount(){\r\n      const networkConnectionInfo = NetInfo.addEventListener(async state => {\r\n        await this.setState({connectionType:state.type, isConnected:state.isConnected});\r\n        await this.fetchDeviceData();\r\n        });\r\n        }\r\n\r\n        // Fetching Device Details\r\n    fetchDeviceData = async() =>{\r\n      if(this.state.connectionType==='wifi' && this.state.isConnected===true){\r\n      await this.setState({isDeviceDataFetching:true});\r\n      fetch('http://192.168.5.1:9876/techapp/deviceInfo',{\r\n        headers:{\r\n          tokenId:'secret'\r\n        }\r\n\r\n      })\r\n      .then((response)=> response.json())\r\n      .then(async(resultData)=>{\r\n        if(resultData['status']==='Success'){\r\n          await this.setState({deviceData:resultData['data']});\r\n        }\r\n        await this.setState({isDeviceDataFetching:false});\r\n        \r\n      })\r\n      .catch(async(e)=>{\r\n        await this.setState({isDeviceDataFetching:false});\r\n        alert(e);\r\n      })\r\n    }\r\n\r\n    }\r\n\r\n    // Send Device Reboot request\r\n    reboot = async () =>{\r\n      fetch('http://192.168.5.1:9876/techapp/reboot',{\r\n        headers:{\r\n          tokenId:'secret',\r\n        }\r\n      })\r\n      .then((response)=> response.json())\r\n      .then(async(resultData)=>{\r\n        if(resultData.status === 'Success'){\r\n          ToastAndroid.showWithGravityAndOffset(\r\n            \"Success:  \"+resultData['infoText'],\r\n            ToastAndroid.LONG,\r\n            ToastAndroid.CENTER,\r\n            25,\r\n            50\r\n          );\r\n        }\r\n      })\r\n      .catch(e =>{\r\n        alert(e)\r\n      })\r\n    }\r\n\r\n    // Alert if network signal disconnected\r\n    networkConnectionFailed = ()=>{\r\n      Alert.alert(\r\n        'Network Failed',\r\n        'Check Your Wifi Connection & Try Again',\r\n        [\r\n          {\r\n            text: 'Close',\r\n          }\r\n        ],\r\n        { cancelable: true }\r\n      );\r\n    }\r\n\r\n\r\n    // Post Product Info\r\n    submitDeviceDetails = async() =>{\r\n      if(this.state.deviceName!=='' && this.state.deviceId!=='' && this.state.deviceType!==''){\r\n\r\n      fetch(\"http://192.168.5.1:9876/techapp/configureDeviceInfo\",{\r\n        method:'POST',\r\n        headers:{\r\n          tokenId:'secret',\r\n          'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({data:{\r\n\r\n          deviceName:this.state.deviceName,\r\n          deviceId:this.state.deviceId,\r\n          deviceType:this.state.deviceType\r\n          \r\n        }\r\n          })})\r\n        .then((response)=> response.json())\r\n        .then(async(resultData)=>{\r\n\r\n          if(resultData['status']==='Success'){\r\n            var newConfigureData = {}\r\n\r\n            newConfigureData['deviceName']=this.state.deviceName,\r\n            newConfigureData['deviceId'] = this.state.deviceId,\r\n            newConfigureData['deviceType'] = this.state.deviceType\r\n            newConfigureData['allDeviceTypes'] = this.state.deviceData.allDeviceTypes\r\n\r\n            await this.setState({deviceData:newConfigureData, deviceName:'', deviceId:'', deviceType:'', isEditDeviceInfo:false});\r\n            ToastAndroid.showWithGravityAndOffset(\r\n              \"Success:  \"+resultData['infoText'],\r\n              ToastAndroid.LONG,\r\n              ToastAndroid.CENTER,\r\n              25,\r\n              50\r\n            );\r\n          }\r\n          else{\r\n\r\n            await this.setState({deviceName:'', deviceId:'', deviceType:'', isEditDeviceInfo:false});\r\n\r\n            ToastAndroid.showWithGravityAndOffset(\r\n              \"Failed:  \"+resultData['infoText'],\r\n              ToastAndroid.LONG,\r\n              ToastAndroid.CENTER,\r\n              25,\r\n              50\r\n            );\r\n\r\n          }\r\n        })\r\n    \r\n    }\r\n    else{\r\n      Alert.alert(\r\n        'Field are missing',\r\n        'All Fields are required.',\r\n        [\r\n          {\r\n            text: 'Close',\r\n          }\r\n        ],\r\n        { cancelable: true }\r\n      );\r\n    }\r\n    }\r\n    render() { \r\n        return ( \r\n            <View>\r\n                    {this.state.connectionType!=='wifi' || this.state.isConnected!==true ?(\r\n                      \r\n                      <View>\r\n                    <Image\r\n                    style={{width:80, height:80, marginLeft:'auto', marginRight:'auto', marginTop:100}}\r\n                    source={require('../warning.png')}\r\n                    />\r\n\r\n                    <Text style={{textAlign:'center'}}>Check Your Wifi Connection</Text>\r\n\r\n                    </View>):(\r\n                    \r\n                    this.state.isDeviceDataFetching===true?(\r\n                      <View>\r\n                            <Spinner color='#182c61'>\r\n\r\n                            </Spinner>\r\n                            <Text style={{textAlign:'center'}}>Loading... Please Wait!</Text>\r\n                            </View>\r\n\r\n                    ):(\r\n\r\n                      this.state.deviceData!==''?(\r\n        <View style={{}}>\r\n          <Card\r\n            style={{\r\n              width: '90%',\r\n              marginLeft: 'auto',\r\n              marginRight: 'auto',\r\n            }}>\r\n            <CardItem header style={{justifyContent: 'center',backgroundColor:'#182C61'}}>\r\n              <Text style={{fontSize: 20, color:'#fff'}}>Device Info</Text>\r\n            </CardItem>\r\n            {this.state.isEditDeviceInfo===false?(   \r\n            <CardItem style={{flexDirection:'column',alignItems:'flex-start'}}>\r\n\r\n                         <View style={{flexDirection:'row', justifyContent:'space-between', width:'95%'}}>\r\n                  <Text style={{fontSize:20,fontWeight:'bold'}}>Device Id</Text>\r\n            <Text style={{fontSize:18}}>{this.state.deviceData.deviceId===null?(\"Not Set\"):(this.state.deviceData.deviceId)}</Text>\r\n                </View>\r\n\r\n                <View style={{flexDirection:'row', justifyContent:'space-between', width:'95%'}}>\r\n                  <Text style={{fontSize:20,fontWeight:'bold'}}>Device Name</Text>\r\n                  <Text style={{fontSize:18}}>{this.state.deviceData.deviceName===null?(\"Not Set\"):(this.state.deviceData.deviceName)}</Text>\r\n                </View>\r\n\r\n                <View style={{flexDirection:'row', justifyContent:'space-between', width:'95%'}}>\r\n                  <Text style={{fontSize:20,fontWeight:'bold'}}>Device Type</Text>\r\n                  <Text style={{fontSize:20}}>{this.state.deviceData.deviceType === null?(\"Not Set\"):(this.state.deviceData.deviceType)}</Text>\r\n                </View>\r\n                <View style={{flexDirection:'row', width:'100%', justifyContent:'space-around'}}>\r\n\r\n                <Button\r\n                            onPress={()=>{this.reboot()}}\r\n                            style={{\r\n                              justifyContent:'center',\r\n                              width:'40%',\r\n                              marginTop:15,\r\n                              marginRight: 'auto',\r\n                              marginLeft:'auto',\r\n                              backgroundColor:'red',\r\n                              borderRadius:100\r\n        \r\n                            }}>\r\n                              <Text style={{marginLeft: 5, color:'#fff'}}>Reboot</Text></Button>\r\n\r\n                <Button\r\n            \r\n                    rounded\r\n                    style={{\r\n                      justifyContent: 'center',\r\n                      marginTop:15,\r\n                      width: '40%',\r\n                      marginLeft: 'auto',\r\n                      marginRight: 'auto',\r\n                      marginBottom: 5,\r\n                      backgroundColor:'#182c61'\r\n\r\n                    }}\r\n\r\n                  onPress={async()=>{await this.setState({isEditDeviceInfo:true})}}\r\n                    >\r\n                    <Text style={{marginLeft: 5, color:'#fff'}}>Edit Details</Text>\r\n                  </Button>\r\n                  </View>\r\n                  </CardItem>\r\n                  ):(\r\n                    <CardItem style={{flexDirection:'column',alignItems:'flex-start'}}>\r\n              \r\n                <Form style={{width: '100%'}}>\r\n                  <Item >\r\n                    <Label>Device Id</Label>\r\n                    <Input name='deviceId' onChangeText={async(value)=>{await this.setState({deviceId:value})}}/>\r\n                  </Item>\r\n                  <Item >\r\n                    <Label>Device Name</Label>\r\n                    <Input name='deviceName' onChangeText={async(value)=>{await this.setState({deviceName:value})}} />\r\n                  </Item>\r\n<Item>\r\n<Label>Device Type</Label>\r\n                  <Picker\r\n              note\r\n              mode=\"dropdown\"\r\n              style={{ width: 120 }}\r\n              selectedValue={this.state.deviceType}\r\n              onValueChange={async(value)=>{\r\n                await this.setState({deviceType:value})\r\n              }}\r\n            >\r\n\r\n              <Picker.Item label=\"---Select Type---\" value=\"\" />\r\n              {this.state.deviceData.allDeviceTypes.map((type)=>{\r\n                return <Picker.Item label={type} value={type} />\r\n              })}\r\n\r\n              \r\n            </Picker>\r\n            </Item>\r\n            <View style={{flexDirection:'row', width:'100%', justifyContent:'space-around'}}>\r\n<Button\r\n                    rounded\r\n                    style={{\r\n                      justifyContent:'space-around',\r\n                      width:'40%',\r\n                      marginBottom: 30,\r\n                      marginTop:20,\r\n                      backgroundColor:'#f1f2f6'\r\n\r\n                    }}\r\n                    \r\n                    onPress = {async()=>{await this.setState({isEditDeviceInfo:false, deviceName:'', deviceId:'', deviceType:''})}}\r\n                    \r\n                    >\r\n                    <Text style={{marginLeft: 5, color:'#000'}}>Cancel</Text>\r\n                  </Button>\r\n<Button\r\n                    rounded\r\n                    style={{\r\n                      justifyContent:'space-around',\r\n                      width:'40%',\r\n                      marginBottom: 30,\r\n                      marginTop:20,\r\n                      backgroundColor:'#182C61'\r\n\r\n                    }}\r\n\r\n                    onPress={()=>{this.submitDeviceDetails()}}\r\n                    >\r\n\r\n                    <Text style={{color:'#fff'}}>Submit</Text>\r\n                  </Button>\r\n                  </View>\r\n                </Form>\r\n              \r\n                  </CardItem>\r\n\r\n                  )}\r\n          </Card>\r\n        </View>\r\n        ):(\r\n          <View>\r\n          <Image\r\n          style={{width:80, height:80, marginLeft:'auto', marginRight:'auto', marginTop:100}}\r\n          source={require('../warning.png')}\r\n          />\r\n\r\n          <Text style={{textAlign:'center'}}>Something Went Wrong...! Please Try Again</Text>\r\n          </View>\r\n\r\n        )\r\n                    )\r\n        )}\r\n\r\n            </View>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DeviceInfo;"]},"metadata":{},"sourceType":"script"}